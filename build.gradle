plugins {
    id 'groovy'
    id 'scala'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.scala-lang:scala-library:2.11.7'
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.scala-lang:scala-library:2.11.7'
    testCompile 'org.scalatest:scalatest_2.11:2.2.5'
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    from "${buildDir}/docs/groovydoc"
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

compileGroovy.dependsOn compileScala
compileTestGroovy.dependsOn compileTestScala

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            // Uncomment if you want to upload the plugin to Maven Central
            //pom.withXml {
            //    asNode().children().last() + {
            //        resolveStrategy = DELEGATE_FIRST
            //        name project.name
            //        description project.description
            //        url project.property('pom.url')
            //        scm {
            //            url project.property('pom.scm.url')
            //            connection project.property('pom.scm.connection')
            //        }
            //        licenses {
            //            license {
            //                name project.property('pom.license.name')
            //                url project.property('pom.license.url')
            //                distribution 'repo'
            //            }
            //        }
            //        developers {
            //            developer {
            //                id project.property('pom.developer.id')
            //                name project.property('pom.developer.name')
            //            }
            //        }
            //    }
            //}
        }
    }
}

bintray {
    final String credential = project.hasProperty('bintray.credential') ?
                              project.property('bintray.credential') : System.getenv('BINTRAY') ?: ''
    user = credential.split(':').first()
    key  = credential.split(':').last()
    publications = ['maven']
    pkg {
        repo = 'maven'
        name = project.name
        version {
            attributes = ['gradle-plugin': "${project.property('gradle.plugin.id')}:${project.group}:${project.name}"]
        }
    }
}

tasks.bintrayUpload.doFirst {
    assert !project.version.contains('SNAPSHOT')
}

task install(dependsOn: 'publishMavenPublicationToMavenLocal') {
}

apply from: file('gradle/plugin-generator.gradle')

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}
